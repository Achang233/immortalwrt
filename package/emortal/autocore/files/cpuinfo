#!/bin/sh

. /etc/openwrt_release

CPUINFO_PATH="/proc/cpuinfo"
CPUFREQ_PATH="/sys/devices/system/cpu/cpufreq/policy0/cpuinfo_cur_freq"
THERMAL_PATH="/sys/class/thermal/thermal_zone0/temp"

cpu_arch="$(cat "$CPUINFO_PATH" 2>/dev/null | awk -F ': ' '/model name/ {print $2}' | head -n1 || echo 'N/A')"

case "$DISTRIB_TARGET" in
x86/*)
	cpu_cores="$(cat "$CPUINFO_PATH" 2>/dev/null | awk -F ': ' '/cpu cores/ {print $2}' | head -n1)C $(grep -c "processor" "$CPUINFO_PATH")T"
	;;
*)
	cpu_cores="$(grep -c "processor" "$CPUINFO_PATH")"
	;;
esac

case "$DISTRIB_TARGET" in
bcm27xx/*)
	cpu_freq="$(( $(vcgencmd measure_clock arm | awk -F '=' '{print $2}') / 1000000 ))MHz"
	;;
bcm53xx/*)
	cpu_freq="$(nvram get clkfreq | awk -F ',' '{print $1}')MHz"
	;;
x86/*)
	cpu_freq="$(cat "$CPUINFO_PATH" 2>/dev/null | awk -F ': ' '/cpu MHz/ {print $2}' | head -n1)MHz"
	;;
*)
	cpu_freq="$(cat "$CPUFREQ_PATH" 2>/dev/null | awk '{printf("%.1fMHz", $0 / 1000)}')"
	;;
esac

case "$DISTRIB_TARGET" in
bcm27xx/*)
	cpu_temp="$(vcgencmd measure_temp | awk -F '=' '{print $2}' | awk -F "'" '{print $1}')째C"
	;;
x86/*)
	if [ -n "$(uci -q get "wechatpush.config.server_host")" ]; then
		cpu_temp="$(/usr/share/wechatpush/wechatpush soc)째C"
	elif grep -q "GenuineIntel" "/proc/cpuinfo"; then
		cpu_temp="$(sensors "coretemp-*" 2>/dev/null | grep -E "(Package id | Core)" | grep -Eo "\+[0-9.]*째C" | head -n1 | tr -d "+")"
	elif grep -q "AuthenticAMD" "/proc/cpuinfo"; then
		cpu_temp="$(sensors "k10temp-*" 2>/dev/null | awk '/Tctl|Tdie/ {print $2}' | head -n1 | tr -d "+")"
	fi
	;;
*)
	cpu_temp="$(cat "$THERMAL_PATH" 2>/dev/null | awk '{printf("%.1f째C", $0 / 1000)}')"
	;;
esac

if [ -n "$cpu_freq" ] && [ -n "$cpu_temp" ]; then
	echo -n "$cpu_arch x $cpu_cores ($cpu_freq $cpu_temp)"
elif [ -n "$cpu_freq" ] && [ -z "$cpu_temp" ]; then
	echo -n "$cpu_arch x $cpu_cores ($cpu_freq)"
elif [ -z "$cpu_freq" ] && [ -n "$cpu_temp" ]; then
	echo -n "$cpu_arch x $cpu_cores ($cpu_temp)"
else
	echo -n "$cpu_arch x $cpu_cores"
fi
